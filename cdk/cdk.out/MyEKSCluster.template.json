{
 "Resources": {
  "EKSVpcBAB3E5CC": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/Resource"
   }
  },
  "EKSVpcPublicSubnet1Subnet6F739FCA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/Subnet"
   }
  },
  "EKSVpcPublicSubnet1RouteTable258B7E17": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/RouteTable"
   }
  },
  "EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPublicSubnet1RouteTable258B7E17"
    },
    "SubnetId": {
     "Ref": "EKSVpcPublicSubnet1Subnet6F739FCA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "EKSVpcPublicSubnet1DefaultRouteF13B673C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPublicSubnet1RouteTable258B7E17"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EKSVpcIGW6C6D33F8"
    }
   },
   "DependsOn": [
    "EKSVpcVPCGW60CB8A7B"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "EKSVpcPublicSubnet1EIPA7436DE4": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/EIP"
   }
  },
  "EKSVpcPublicSubnet1NATGatewayE8A16310": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "EKSVpcPublicSubnet1Subnet6F739FCA"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "EKSVpcPublicSubnet1EIPA7436DE4",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "EKSVpcPublicSubnet1DefaultRouteF13B673C",
    "EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet1/NATGateway"
   }
  },
  "EKSVpcPublicSubnet2Subnet22F974C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/Subnet"
   }
  },
  "EKSVpcPublicSubnet2RouteTable0AB21A14": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/RouteTable"
   }
  },
  "EKSVpcPublicSubnet2RouteTableAssociation56EB44CD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPublicSubnet2RouteTable0AB21A14"
    },
    "SubnetId": {
     "Ref": "EKSVpcPublicSubnet2Subnet22F974C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "EKSVpcPublicSubnet2DefaultRoute6E6CA646": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPublicSubnet2RouteTable0AB21A14"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EKSVpcIGW6C6D33F8"
    }
   },
   "DependsOn": [
    "EKSVpcVPCGW60CB8A7B"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "EKSVpcPublicSubnet2EIPBD601F30": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/EIP"
   }
  },
  "EKSVpcPublicSubnet2NATGateway06A389FD": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "EKSVpcPublicSubnet2Subnet22F974C4"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "EKSVpcPublicSubnet2EIPBD601F30",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "EKSVpcPublicSubnet2DefaultRoute6E6CA646",
    "EKSVpcPublicSubnet2RouteTableAssociation56EB44CD"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PublicSubnet2/NATGateway"
   }
  },
  "EKSVpcPrivateSubnet1SubnetD09A7726": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet1/Subnet"
   }
  },
  "EKSVpcPrivateSubnet1RouteTable158AD21B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet1/RouteTable"
   }
  },
  "EKSVpcPrivateSubnet1RouteTableAssociation05ED387B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPrivateSubnet1RouteTable158AD21B"
    },
    "SubnetId": {
     "Ref": "EKSVpcPrivateSubnet1SubnetD09A7726"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPrivateSubnet1RouteTable158AD21B"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "EKSVpcPublicSubnet1NATGatewayE8A16310"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "EKSVpcPrivateSubnet2Subnet75FE259E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet2/Subnet"
   }
  },
  "EKSVpcPrivateSubnet2RouteTable584CB1D6": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet2/RouteTable"
   }
  },
  "EKSVpcPrivateSubnet2RouteTableAssociation56D711FD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPrivateSubnet2RouteTable584CB1D6"
    },
    "SubnetId": {
     "Ref": "EKSVpcPrivateSubnet2Subnet75FE259E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "EKSVpcPrivateSubnet2DefaultRoute6DA3F959": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EKSVpcPrivateSubnet2RouteTable584CB1D6"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "EKSVpcPublicSubnet2NATGateway06A389FD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "EKSVpcIGW6C6D33F8": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyEKSCluster/EKSVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/IGW"
   }
  },
  "EKSVpcVPCGW60CB8A7B": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    },
    "InternetGatewayId": {
     "Ref": "EKSVpcIGW6C6D33F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSVpc/VPCGW"
   }
  },
  "AdminRole38563C57": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/AdminRole/Resource"
   }
  },
  "EKSWorkerRole2A87069F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKS_CNI_Policy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/EKSWorkerRole/Resource"
   }
  },
  "ClusterRoleFA261979": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "eks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSClusterPolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/Role/Resource"
   }
  },
  "ClusterControlPlaneSecurityGroupD274242C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EKS Control Plane Security Group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/ControlPlaneSecurityGroup/Resource"
   }
  },
  "ClusterControlPlaneSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570443CCA3D993": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "ClusterControlPlaneSecurityGroupD274242C",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/ControlPlaneSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443"
   }
  },
  "ClusterCreationRole360249B6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "EKSVpcIGW6C6D33F8",
    "EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2",
    "EKSVpcPrivateSubnet1RouteTable158AD21B",
    "EKSVpcPrivateSubnet1RouteTableAssociation05ED387B",
    "EKSVpcPrivateSubnet1SubnetD09A7726",
    "EKSVpcPrivateSubnet2DefaultRoute6DA3F959",
    "EKSVpcPrivateSubnet2RouteTable584CB1D6",
    "EKSVpcPrivateSubnet2RouteTableAssociation56D711FD",
    "EKSVpcPrivateSubnet2Subnet75FE259E",
    "EKSVpcPublicSubnet1DefaultRouteF13B673C",
    "EKSVpcPublicSubnet1EIPA7436DE4",
    "EKSVpcPublicSubnet1NATGatewayE8A16310",
    "EKSVpcPublicSubnet1RouteTable258B7E17",
    "EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD",
    "EKSVpcPublicSubnet1Subnet6F739FCA",
    "EKSVpcPublicSubnet2DefaultRoute6E6CA646",
    "EKSVpcPublicSubnet2EIPBD601F30",
    "EKSVpcPublicSubnet2NATGateway06A389FD",
    "EKSVpcPublicSubnet2RouteTable0AB21A14",
    "EKSVpcPublicSubnet2RouteTableAssociation56EB44CD",
    "EKSVpcPublicSubnet2Subnet22F974C4",
    "EKSVpcBAB3E5CC",
    "EKSVpcVPCGW60CB8A7B"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/Resource/CreationRole/Resource"
   }
  },
  "ClusterCreationRoleDefaultPolicyE8BDFC7B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ClusterRoleFA261979",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "eks:CreateCluster",
        "eks:DescribeCluster",
        "eks:DescribeUpdate",
        "eks:DeleteCluster",
        "eks:UpdateClusterVersion",
        "eks:UpdateClusterConfig",
        "eks:CreateFargateProfile",
        "eks:TagResource",
        "eks:UntagResource"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster/myEKS"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster/myEKS/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "eks:DescribeFargateProfile",
        "eks:DeleteFargateProfile"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":eks:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":fargateprofile/myEKS/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "iam:GetRole",
        "iam:listAttachedRolePolicies"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:CreateServiceLinkedRole",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeRouteTables",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeVpcs"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "Roles": [
     {
      "Ref": "ClusterCreationRole360249B6"
     }
    ]
   },
   "DependsOn": [
    "EKSVpcIGW6C6D33F8",
    "EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2",
    "EKSVpcPrivateSubnet1RouteTable158AD21B",
    "EKSVpcPrivateSubnet1RouteTableAssociation05ED387B",
    "EKSVpcPrivateSubnet1SubnetD09A7726",
    "EKSVpcPrivateSubnet2DefaultRoute6DA3F959",
    "EKSVpcPrivateSubnet2RouteTable584CB1D6",
    "EKSVpcPrivateSubnet2RouteTableAssociation56D711FD",
    "EKSVpcPrivateSubnet2Subnet75FE259E",
    "EKSVpcPublicSubnet1DefaultRouteF13B673C",
    "EKSVpcPublicSubnet1EIPA7436DE4",
    "EKSVpcPublicSubnet1NATGatewayE8A16310",
    "EKSVpcPublicSubnet1RouteTable258B7E17",
    "EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD",
    "EKSVpcPublicSubnet1Subnet6F739FCA",
    "EKSVpcPublicSubnet2DefaultRoute6E6CA646",
    "EKSVpcPublicSubnet2EIPBD601F30",
    "EKSVpcPublicSubnet2NATGateway06A389FD",
    "EKSVpcPublicSubnet2RouteTable0AB21A14",
    "EKSVpcPublicSubnet2RouteTableAssociation56EB44CD",
    "EKSVpcPublicSubnet2Subnet22F974C4",
    "EKSVpcBAB3E5CC",
    "EKSVpcVPCGW60CB8A7B"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/Resource/CreationRole/DefaultPolicy/Resource"
   }
  },
  "Cluster9EE0221C": {
   "Type": "Custom::AWSCDK-EKS-Cluster",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
      "Outputs.MyEKSClusterawscdkawseksClusterResourceProviderframeworkonEventB3DDA680Arn"
     ]
    },
    "Config": {
     "name": "myEKS",
     "version": "1.21",
     "roleArn": {
      "Fn::GetAtt": [
       "ClusterRoleFA261979",
       "Arn"
      ]
     },
     "resourcesVpcConfig": {
      "subnetIds": [
       {
        "Ref": "EKSVpcPublicSubnet1Subnet6F739FCA"
       },
       {
        "Ref": "EKSVpcPublicSubnet2Subnet22F974C4"
       },
       {
        "Ref": "EKSVpcPrivateSubnet1SubnetD09A7726"
       },
       {
        "Ref": "EKSVpcPrivateSubnet2Subnet75FE259E"
       }
      ],
      "securityGroupIds": [
       {
        "Fn::GetAtt": [
         "ClusterControlPlaneSecurityGroupD274242C",
         "GroupId"
        ]
       }
      ],
      "endpointPublicAccess": true,
      "endpointPrivateAccess": true
     }
    },
    "AssumeRoleArn": {
     "Fn::GetAtt": [
      "ClusterCreationRole360249B6",
      "Arn"
     ]
    },
    "AttributesRevision": 2
   },
   "DependsOn": [
    "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "ClusterCreationRole360249B6",
    "EKSVpcIGW6C6D33F8",
    "EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2",
    "EKSVpcPrivateSubnet1RouteTable158AD21B",
    "EKSVpcPrivateSubnet1RouteTableAssociation05ED387B",
    "EKSVpcPrivateSubnet1SubnetD09A7726",
    "EKSVpcPrivateSubnet2DefaultRoute6DA3F959",
    "EKSVpcPrivateSubnet2RouteTable584CB1D6",
    "EKSVpcPrivateSubnet2RouteTableAssociation56D711FD",
    "EKSVpcPrivateSubnet2Subnet75FE259E",
    "EKSVpcPublicSubnet1DefaultRouteF13B673C",
    "EKSVpcPublicSubnet1EIPA7436DE4",
    "EKSVpcPublicSubnet1NATGatewayE8A16310",
    "EKSVpcPublicSubnet1RouteTable258B7E17",
    "EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD",
    "EKSVpcPublicSubnet1Subnet6F739FCA",
    "EKSVpcPublicSubnet2DefaultRoute6E6CA646",
    "EKSVpcPublicSubnet2EIPBD601F30",
    "EKSVpcPublicSubnet2NATGateway06A389FD",
    "EKSVpcPublicSubnet2RouteTable0AB21A14",
    "EKSVpcPublicSubnet2RouteTableAssociation56EB44CD",
    "EKSVpcPublicSubnet2Subnet22F974C4",
    "EKSVpcBAB3E5CC",
    "EKSVpcVPCGW60CB8A7B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/Resource/Resource/Default"
   }
  },
  "ClusterKubectlReadyBarrier200052AF": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "aws:cdk:eks:kubectl-ready"
   },
   "DependsOn": [
    "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "ClusterCreationRole360249B6",
    "Cluster9EE0221C"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/KubectlReadyBarrier"
   }
  },
  "ClusterClusterSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570443F1F32E8A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "Cluster9EE0221C",
      "ClusterSecurityGroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/ClusterSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443"
   }
  },
  "ClusterAwsAuthmanifestFE51F8AE": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.MyEKSClusterawscdkawseksKubectlProviderframeworkonEvent070BFADCArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c896a91b539e5525d108fad41cffd42be265602255\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "AdminRole38563C57",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"",
       {
        "Fn::GetAtt": [
         "AdminRole38563C57",
         "Arn"
        ]
       },
       "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "EKSWorkerRole2A87069F",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "Cluster9EE0221C"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClusterCreationRole360249B6",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c896a91b539e5525d108fad41cffd42be265602255",
    "Overwrite": true
   },
   "DependsOn": [
    "ClusterKubectlReadyBarrier200052AF"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/AwsAuth/manifest/Resource/Default"
   }
  },
  "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "ec2.",
           {
            "Ref": "AWS::URLSuffix"
           }
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKS_CNI_Policy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/NodegroupDefaultCapacity/NodeGroupRole/Resource"
   }
  },
  "ClusterNodegroupDefaultCapacityDA0920A3": {
   "Type": "AWS::EKS::Nodegroup",
   "Properties": {
    "ClusterName": {
     "Ref": "Cluster9EE0221C"
    },
    "NodeRole": {
     "Fn::GetAtt": [
      "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
      "Arn"
     ]
    },
    "Subnets": [
     {
      "Ref": "EKSVpcPrivateSubnet1SubnetD09A7726"
     },
     {
      "Ref": "EKSVpcPrivateSubnet2Subnet75FE259E"
     }
    ],
    "AmiType": "AL2_x86_64",
    "ForceUpdateEnabled": true,
    "InstanceTypes": [
     "m5.large"
    ],
    "ScalingConfig": {
     "DesiredSize": 1,
     "MaxSize": 1,
     "MinSize": 1
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/Cluster/NodegroupDefaultCapacity/Resource"
   }
  },
  "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/211f10c335c081c2b48e722846db168a9c68c2550591a0ed93000ebf01c54ea2.json"
      ]
     ]
    },
    "Parameters": {
     "referencetoMyEKSClusterCreationRoleDD564FE8Arn": {
      "Fn::GetAtt": [
       "ClusterCreationRole360249B6",
       "Arn"
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
    "aws:asset:path": "MyEKSClusterawscdkawseksClusterResourceProvider7494A2FD.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/7a84d82d4f600f7bbf92f14090cd921c18f8d9fe391ad0084bf2877881ddc759.json"
      ]
     ]
    },
    "Parameters": {
     "referencetoMyEKSClusterD473B49BArn": {
      "Fn::GetAtt": [
       "Cluster9EE0221C",
       "Arn"
      ]
     },
     "referencetoMyEKSClusterCreationRoleDD564FE8Arn": {
      "Fn::GetAtt": [
       "ClusterCreationRole360249B6",
       "Arn"
      ]
     },
     "referencetoMyEKSClusterEKSVpcPrivateSubnet1Subnet52504ADFRef": {
      "Ref": "EKSVpcPrivateSubnet1SubnetD09A7726"
     },
     "referencetoMyEKSClusterEKSVpcPrivateSubnet2Subnet500D329DRef": {
      "Ref": "EKSVpcPrivateSubnet2Subnet75FE259E"
     },
     "referencetoMyEKSClusterD473B49BClusterSecurityGroupId": {
      "Fn::GetAtt": [
       "Cluster9EE0221C",
       "ClusterSecurityGroupId"
      ]
     }
    }
   },
   "DependsOn": [
    "EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2",
    "EKSVpcPrivateSubnet1RouteTableAssociation05ED387B",
    "EKSVpcPrivateSubnet2DefaultRoute6DA3F959",
    "EKSVpcPrivateSubnet2RouteTableAssociation56D711FD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
    "aws:asset:path": "MyEKSClusterawscdkawseksKubectlProvider6C070B46.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "OnDemandASGInstanceSecurityGroup58386299": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyEKSCluster/OnDemandASG"
     }
    ],
    "VpcId": {
     "Ref": "EKSVpcBAB3E5CC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/Resource"
   }
  },
  "OnDemandASGInstanceSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570ALLTRAFFIC9923120F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "-1",
    "Description": "from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:ALL TRAFFIC",
    "GroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:ALL TRAFFIC"
   }
  },
  "OnDemandASGInstanceSecurityGroupfromMyEKSClusterClusterSecurityGroupBF736D1E443D3D22A0E": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterClusterSecurityGroupBF736D1E:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "Cluster9EE0221C",
      "ClusterSecurityGroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterClusterSecurityGroupBF736D1E:443"
   }
  },
  "OnDemandASGInstanceSecurityGroupfromMyEKSClusterControlPlaneSecurityGroup247C60E14437054627A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterControlPlaneSecurityGroup247C60E1:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ClusterControlPlaneSecurityGroupD274242C",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterControlPlaneSecurityGroup247C60E1:443"
   }
  },
  "OnDemandASGInstanceSecurityGroupfromMyEKSClusterClusterSecurityGroupBF736D1E102565535791C2D83": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterClusterSecurityGroupBF736D1E:1025-65535",
    "FromPort": 1025,
    "GroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "Cluster9EE0221C",
      "ClusterSecurityGroupId"
     ]
    },
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterClusterSecurityGroupBF736D1E:1025-65535"
   }
  },
  "OnDemandASGInstanceSecurityGroupfromMyEKSClusterControlPlaneSecurityGroup247C60E1102565535C8F83CA5": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from MyEKSClusterControlPlaneSecurityGroup247C60E1:1025-65535",
    "FromPort": 1025,
    "GroupId": {
     "Fn::GetAtt": [
      "OnDemandASGInstanceSecurityGroup58386299",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ClusterControlPlaneSecurityGroupD274242C",
      "GroupId"
     ]
    },
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterControlPlaneSecurityGroup247C60E1:1025-65535"
   }
  },
  "OnDemandASGInstanceProfile0FD1CDE0": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EKSWorkerRole2A87069F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/InstanceProfile"
   }
  },
  "OnDemandASGLaunchConfig15AF6999": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceeksoptimizedami121amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.nano",
    "IamInstanceProfile": {
     "Ref": "OnDemandASGInstanceProfile0FD1CDE0"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "OnDemandASGInstanceSecurityGroup58386299",
       "GroupId"
      ]
     },
     {
      "Fn::GetAtt": [
       "Cluster9EE0221C",
       "ClusterSecurityGroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
        {
         "Ref": "Cluster9EE0221C"
        },
        " --kubelet-extra-args \"--node-labels lifecycle=OnDemand\" --apiserver-endpoint '",
        {
         "Fn::GetAtt": [
          "Cluster9EE0221C",
          "Endpoint"
         ]
        },
        "' --b64-cluster-ca '",
        {
         "Fn::GetAtt": [
          "Cluster9EE0221C",
          "CertificateAuthorityData"
         ]
        },
        "' --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack MyEKSCluster --resource OnDemandASGC62213FE --region ",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "EKSWorkerRole2A87069F"
   ],
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/LaunchConfig"
   }
  },
  "OnDemandASGC62213FE": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "10",
    "MinSize": "1",
    "LaunchConfigurationName": {
     "Ref": "OnDemandASGLaunchConfig15AF6999"
    },
    "Tags": [
     {
      "Key": {
       "Fn::Join": [
        "",
        [
         "kubernetes.io/cluster/",
         {
          "Ref": "Cluster9EE0221C"
         }
        ]
       ]
      },
      "PropagateAtLaunch": true,
      "Value": "owned"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "MyEKSCluster/OnDemandASG"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Ref": "EKSVpcPrivateSubnet1SubnetD09A7726"
     },
     {
      "Ref": "EKSVpcPrivateSubnet2Subnet75FE259E"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingRollingUpdate": {
     "SuspendProcesses": [
      "HealthCheck",
      "ReplaceUnhealthy",
      "AZRebalance",
      "AlarmNotification",
      "ScheduledActions"
     ]
    },
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/OnDemandASG/ASG"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32RQU/DMAyFf8vuWWATSHCsKjRVwKhatCtyM7fz1iZT4myaqv530patiAMnv/fkxJ+TpXx4lPczOLu52h7mNRWyzRnUQYToq0W1lO3mqERc6k0ai9QXNancFxq5zyaVGc/4CUWNUz5lkXNGETAZfWvuxUuS9mUNvALGM1xEaukU5HRxohlt0NeGkeTHRRxYdw1qFjkqb4kvK2v8cWD4N0h0ZdG5ThA0ss3MyD3U1IQdh0GTSrRj0ApTa0qqsRN4cLKNa+8CnYjOLvK8E6++GFjRvYOmEh2LtdlidSW4mU6AZ+MU1KQr2YbDJh/NjfYNvFa72OiSKm9vT/e3tetEhs54q8ICgcY0kw37/NIfno9+/LXhg/v9wEKD/QbBhFFb6sd0QgdOuXd3p8WTfJaL2d4Rza3XTA3KbKzfP883VToCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MyEKSCluster/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ClusterConfigCommand43AAE40F": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks update-kubeconfig --name ",
      {
       "Ref": "Cluster9EE0221C"
      },
      " --region ",
      {
       "Ref": "AWS::Region"
      },
      " --role-arn ",
      {
       "Fn::GetAtt": [
        "AdminRole38563C57",
        "Arn"
       ]
      }
     ]
    ]
   }
  },
  "ClusterGetTokenCommand06AE992E": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks get-token --cluster-name ",
      {
       "Ref": "Cluster9EE0221C"
      },
      " --region ",
      {
       "Ref": "AWS::Region"
      },
      " --role-arn ",
      {
       "Fn::GetAtt": [
        "AdminRole38563C57",
        "Arn"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceeksoptimizedami121amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/aws/service/eks/optimized-ami/1.21/amazon-linux-2/recommended/image_id"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}